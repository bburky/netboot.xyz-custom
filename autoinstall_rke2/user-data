#cloud-config
autoinstall:
    version: 1
    # early-commands:
    #     - foo
    # network:
    #     network:
    # packages:
    #     - foo
    storage:
        swap:
           size: 0
        layout:
            name: lvm
            match:
                model: "MKNSSDRE1TB"
    ssh:
        install-server: yes
        authorized-keys:
        - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDOqA17LOoERyTpng12R8JunvdqPZpAVlBWKPRGklvGcyMyzjr+bw8SZk+NLMmgFATkg2WbH58Rrf59UC6cUuvse45rn0BBADhNY2Hq1ZT2+NHGXOF0BjHLboJN+63ogndnc8UwOPxr55yHFOe7a5c5I9yO09Fw7sjUL5p9btLnigspmd3Mz5xIlRhdrnEfloiVJ2kl0p+2GC6Z1vxQ/rm+qIg1imb+hI2DEJ/yAi0+5x0+Bu8zJ77A7SlplvLvOE4rOB4LnIIppMIpKw+4mPAOg+rORVaUsD17bqSoR4PQJlH9+TcoaEM9hAMWegzyYqXxQsr8lF2zOT7odaZmZmlpzIoYlPfiO0bJBY28LLAzXu2Xl3cwhpaLDOt6Fjx5hdAaylUp0yfkIXEbEm2pC+OYdNWi1AKt4wr3EesdqkovhnA35DbPe4e79qKiuzcJXA1O2QcIvgDFM+njvcGjIKA0JOo/7itMHkjXTQ6h/3ko+dkMQa//35PMF85zZH5P08U=
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAlMvKelq4naw8MBhzQ7O6JlBeBxjvpOoLoQsPRCEdfI
        allow-pw: no
    late-commands:
        - echo 'ubuntu ALL=(ALL) NOPASSWD:ALL' > /target/etc/sudoers.d/ubuntu

    user-data:
        hostname: workstation-rke2
        packages:
            - jq
            - beep
        # ssh_pwauth: True
        # disable_root: false
        # preserve_hostname: true
        write_files:
        -   path: /etc/sysctl.d/99-k8s.conf
            permissions: '0644'
            content: |
                vm.max_map_count=1524288
                fs.inotify.max_user_instances=8192
        
        -   path: /etc/security/limits.d/99-k8s.conf
            permissions: '0644'
            content: |
                * hard nofile 1000000
                * soft nofile 1000000
                * hard nproc 8192
                * soft nproc 8192

        -   path: /opt/setup.sh
            permissions: '0770'
            content: |
                #!/bin/bash
                set -x
                set -e

                if [[ "$1" != "server" && "$1" != "agent" ]]; then
                    echo "Invalid argument. Usage: $0 [server|agent]"
                    exit 1
                fi

                echo "Running setup as $(whoami)"

                # echo "Resize disks (all nodes)"
                # lvresize -rl +100%FREE /dev/vgroot/lvroot

                echo "Install iptables (required for nginx ingress controller) (all nodes)"
                apt install iptables -y

                echo "Set up Longhorn dependencies (all nodes)"
                apt install open-iscsi nfs-common -y
                systemctl start iscsid

                systemctl daemon-reload

                if [ "$1" = "server" ]; then
                    echo "Running server setup"
                    systemctl enable --now rke2-server
                    systemctl start rke2-server.service
                elif [ "$1" = "agent" ]; then
                    echo "Running agent setup"
                    systemctl enable --now rke2-agent
                    systemctl start rke2-agent.service
                fi

        -   path: /etc/rancher/rke2/config.yaml
            owner: root:root
            permissions: '0600'
            defer: true
            content: |
                disable-cloud-controller: true
                write-kubeconfig-mode: 644
                disable:
                    - "rke2-ingress-nginx"

        runcmd:
        # - sed -i -e '/^[#]*PermitRootLogin/s/^.*$/PermitRootLogin yes/' /etc/ssh/sshd_config
        # - systemctl restart ssh

        - swapoff -a
        - sed -e '/swap/ s/^#*/#/' -i /etc/fstab
        - systemctl mask swap.target
        - sysctl --system

        - [ curl, -L, -o, /usr/local/bin/zarf, https://github.com/defenseunicorns/zarf/releases/download/v0.27.1/zarf_v0.27.1_Linux_amd64 ]
        - [ chmod, +x, /usr/local/bin/zarf ]

        - curl -sfL https://get.rke2.io | INSTALL_RKE2_VERSION="v1.26.3+rke2r1" sh -
        - mkdir -p /etc/rancher/rke2
        - 'sudo bash -c "/opt/setup.sh server | tee /tmp/setup.log"'
        - 'mkdir /home/ubuntu/.kube'
        # TODO: may have issues with multiple interfaces
        - |
            sed "s_server: .*_server: https://$(ip --json route get 192.168.0.1  | jq -r '.[0].prefsrc'):6443/_" /etc/rancher/rke2/rke2.yaml > /home/ubuntu/.kube/config'
        - chown -R ubuntu:ubuntu /home/ubuntu/.kube
        # Beep on completion of cloud-init
        - 'modprobe pcspkr'
        - 'beep -d 1200 -f 988 -l 200  --new -f 1319 -l 800'